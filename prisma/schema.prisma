generator client {
  provider = "prisma-client-js"
  url      = env("DATABASE_URL")
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  permissions Permission[] @relation("RolePermissions")
  users       User[]       @relation("UserRoles")
}

model Permission {
  id    Int    @id @default(autoincrement())
  name  String @unique
  roles Role[] @relation("RolePermissions")
  users User[] @relation("UserPermissions")
}

model User {
  user_id          Int               @id @default(autoincrement())
  username         String
  email            String            @unique
  phone            String
  password         String
  verified         Boolean           @default(false)
  status           UserStatus        @default(pending)
  deletedAt        DateTime?
  providerAccounts ProviderAccount[]
  permissions      Permission[]      @relation("UserPermissions")
  roles            Role[]            @relation("UserRoles")

  @@index([deletedAt])
}

model PasswordResetOTP {
  id         Int      @id @default(autoincrement())
  email      String
  otp        String
  verified   Boolean  @default(false)
  type       String
  expires_at DateTime
  created_at DateTime @default(now())
}

model ProviderAccount {
  id       String @id @default(cuid())
  provider String
  userId   Int
  user     User   @relation(fields: [userId], references: [user_id])

  @@index([userId], map: "ProviderAccount_userId_fkey")
}

enum UserStatus {
  active
  pending
  suspended
}
